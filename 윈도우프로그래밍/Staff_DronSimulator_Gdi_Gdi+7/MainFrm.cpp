
// MainFrm.cpp : CMainFrame 클래스의 구현
//

#include "stdafx.h"
#include "Staff_DronSimulator.h"

#include "MainFrm.h"

#include "Staff_DronSimulatorDoc.h"
#include "Staff_DronSimulatorView.h"
#include "Staff_DronController.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif

// CMainFrame

IMPLEMENT_DYNCREATE(CMainFrame, CFrameWnd)

BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
	ON_WM_CREATE()
END_MESSAGE_MAP()

BEGIN_MESSAGE_MAP(CFixedSplitterWnd, CSplitterWnd)
	ON_WM_NCHITTEST()
END_MESSAGE_MAP()

static UINT indicators[] =
{
	ID_SEPARATOR,           // 상태 줄 표시기
	ID_INDICATOR_CAPS,
	ID_INDICATOR_NUM,
	ID_INDICATOR_SCRL,
};


CFixedSplitterWnd::CFixedSplitterWnd()
{}

CFixedSplitterWnd::~CFixedSplitterWnd()
{}

LRESULT CFixedSplitterWnd::OnNcHitTest(CPoint point)
{
	return HTNOWHERE;
}

// CMainFrame 생성/소멸

CMainFrame::CMainFrame()
{
	// TODO: 여기에 멤버 초기화 코드를 추가합니다.
}

CMainFrame::~CMainFrame()
{
}

int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)
{
	if (CFrameWnd::OnCreate(lpCreateStruct) == -1)
		return -1;

	if (!m_wndToolBar.CreateEx(this, TBSTYLE_FLAT, WS_CHILD | WS_VISIBLE | CBRS_TOP | CBRS_GRIPPER | CBRS_TOOLTIPS | CBRS_FLYBY | CBRS_SIZE_DYNAMIC) ||
		!m_wndToolBar.LoadToolBar(IDR_MAINFRAME))
	{
		TRACE0("도구 모음을 만들지 못했습니다.\n");
		return -1;      // 만들지 못했습니다.
	}

	if (!m_wndStatusBar.Create(this))
	{
		TRACE0("상태 표시줄을 만들지 못했습니다.\n");
		return -1;      // 만들지 못했습니다.
	}

	

	m_wndStatusBar.SetIndicators(indicators, sizeof(indicators)/sizeof(UINT));

	// TODO: 도구 모음을 도킹할 수 없게 하려면 이 세 줄을 삭제하십시오.
	m_wndToolBar.EnableDocking(CBRS_ALIGN_ANY);
	EnableDocking(CBRS_ALIGN_ANY);
	DockControlBar(&m_wndToolBar);


	return 0;
}

BOOL CMainFrame::PreCreateWindow(CREATESTRUCT& cs)
{
	if( !CFrameWnd::PreCreateWindow(cs) )
		return FALSE;
	// TODO: CREATESTRUCT cs를 수정하여 여기에서
	//  Window 클래스 또는 스타일을 수정합니다.

	cs.style &= ~(WS_THICKFRAME | WS_MAXIMIZEBOX); //윈도우 크기고정
	cs.cx = 1529;	//가로길이
	cs.cy = 807;	//세로길이

	return TRUE;
}

// CMainFrame 진단

#ifdef _DEBUG
void CMainFrame::AssertValid() const
{
	CFrameWnd::AssertValid();
}

void CMainFrame::Dump(CDumpContext& dc) const
{
	CFrameWnd::Dump(dc);
}
#endif //_DEBUG


// CMainFrame 메시지 처리기



BOOL CMainFrame::OnCreateClient(LPCREATESTRUCT lpcs, CCreateContext* pContext)
{
	// TODO: 여기에 특수화된 코드를 추가 및/또는 기본 클래스를 호출합니다.

	if (!m_wndSplitter.CreateStatic(this, 1, 2))
	{
		TRACE0("Fail to Create Splitter.\r");
		return FALSE;
	}

	//int m_IDpane = m_wndSplitter.IdFromRowCol(0, 0);
	//int m_IDpane2 = m_wndSplitter.IdFromRowCol(0, 1);

	//if (!m_wndSplitter2.CreateStatic(&m_wndSplitter, 2, 1, WS_CHILD | WS_VISIBLE, m_IDpane2))
	//{
	//	TRACE0("Fail to Create Splitter.\r");
	//	return FALSE;
	//}

	//CTopView와 CBottomView를 연결 시켜 준다.
	m_wndSplitter.CreateView(0, 0, RUNTIME_CLASS(CStaff_DronSimulatorView), CSize(1001, 300), pContext);
	m_wndSplitter.CreateView(0, 1, RUNTIME_CLASS(CStaff_DronController), CSize(300, 300), pContext);
	//m_wndSplitter2.CreateView(0, 0, RUNTIME_CLASS(CStaff_DronController), CSize(300, 275), pContext);
	//m_wndSplitter2.CreateView(1, 0, RUNTIME_CLASS(MyFormView), CSize(300, 10), pContext);
	return TRUE;

	//return CFrameWnd::OnCreateClient(lpcs, pContext);
}
